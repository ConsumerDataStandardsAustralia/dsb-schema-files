{
    "CommonEmailAddress": {
        "required": [
            "address",
            "purpose"
        ],
        "type": "object",
        "properties": {
            "isPreferred": {
                "type": "boolean",
                "description": "May be true for one and only one email record in the collection. Denotes the default email address",
                "x-cds-type": "Boolean"
            },
            "purpose": {
                "type": "string",
                "description": "The purpose for the email, as specified by the customer (Enumeration)",
                "enum": [
                    "HOME",
                    "OTHER",
                    "UNSPECIFIED",
                    "WORK"
                ]
            },
            "address": {
                "type": "string",
                "description": "A correctly formatted email address, as defined by the addr_spec format in **[[RFC5322]](#nref-RFC5322)**",
                "x-cds-type": "ExternalRef"
            }
        },
        "$id": "CommonEmailAddress"
    },
    "CommonOrganisation": {
        "required": [
            "agentLastName",
            "agentRole",
            "businessName",
            "organisationType"
        ],
        "type": "object",
        "properties": {
            "lastUpdateTime": {
                "type": "string",
                "description": "The date and time that this record was last updated by the customer. If no update has occurred then this date should reflect the initial creation date for the data",
                "x-cds-type": "DateTimeString"
            },
            "agentFirstName": {
                "type": "string",
                "description": "The first name of the individual providing access on behalf of the organisation. For people with single names this field need not be present.  The single name should be in the lastName field"
            },
            "agentLastName": {
                "type": "string",
                "description": "The last name of the individual providing access on behalf of the organisation. For people with single names the single name should be in this field"
            },
            "agentRole": {
                "type": "string",
                "description": "The role of the individual identified as the agent who is providing authorisation.  Expected to be used for display. Default to Unspecified if the role is not known"
            },
            "businessName": {
                "type": "string",
                "description": "Name of the organisation"
            },
            "legalName": {
                "type": "string",
                "description": "Legal name, if different to the business name"
            },
            "shortName": {
                "type": "string",
                "description": "Short name used for communication, if different to the business name"
            },
            "abn": {
                "type": "string",
                "description": "Australian Business Number for the organisation"
            },
            "acn": {
                "type": "string",
                "description": "Australian Company Number for the organisation. Required only if an ACN is applicable for the organisation type"
            },
            "isACNCRegistered": {
                "type": "boolean",
                "description": "True if registered with the ACNC.  False if not. Absent or null if not confirmed.",
                "x-cds-type": "Boolean"
            },
            "industryCode": {
                "type": "string",
                "description": "A valid [ANZSIC](http://www.abs.gov.au/ANZSIC) code for the organisation. If the industry code held by the data holder is not one of the supported [ANZSIC](http://www.abs.gov.au/ANZSIC) versions, then it must not be supplied.",
                "x-cds-type": "ExternalRef"
            },
            "industryCodeVersion": {
                "type": "string",
                "description": "The applicable [ANZSIC](http://www.abs.gov.au/ANZSIC) release version of the industry code provided. Should only be supplied if ``industryCode`` is also supplied. If ``industryCode`` is supplied but ``industryCodeVersion`` is absent, default is ``ANZSIC_1292.0_2006_V2.0``",
                "default": "ANZSIC_1292.0_2006_V2.0",
                "enum": [
                    "ANZSIC_1292.0_2006_V1.0",
                    "ANZSIC_1292.0_2006_V2.0"
                ]
            },
            "organisationType": {
                "type": "string",
                "description": "Legal organisation type",
                "enum": [
                    "COMPANY",
                    "GOVERNMENT_ENTITY",
                    "OTHER",
                    "PARTNERSHIP",
                    "SOLE_TRADER",
                    "TRUST"
                ]
            },
            "registeredCountry": {
                "type": "string",
                "description": "Enumeration with values from [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country codes.  Assumed to be AUS if absent",
                "x-cds-type": "ExternalRef"
            },
            "establishmentDate": {
                "type": "string",
                "description": "The date the organisation described was established",
                "x-cds-type": "DateString"
            }
        },
        "x-conditional": [
            "industryCodeVersion"
        ],
        "$id": "CommonOrganisation"
    },
    "CommonOrganisationDetailV2": {
        "allOf": [
            {
                "$ref": "CommonOrganisation"
            },
            {
                "required": [
                    "physicalAddresses"
                ],
                "type": "object",
                "properties": {
                    "physicalAddresses": {
                        "type": "array",
                        "description": "Array is mandatory but may be empty if no valid addresses are held. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail",
                        "items": {
                            "$ref": "CommonPhysicalAddressWithPurpose"
                        }
                    }
                }
            }
        ],
        "$id": "CommonOrganisationDetailV2"
    },
    "CommonPAFAddress": {
        "required": [
            "localityName",
            "postcode",
            "state"
        ],
        "type": "object",
        "properties": {
            "dpid": {
                "type": "string",
                "description": "Unique identifier for an address as defined by Australia Post.  Also known as Delivery Point Identifier"
            },
            "thoroughfareNumber1": {
                "type": "integer",
                "description": "Thoroughfare number for a property (first number in a property ranged address)",
                "x-cds-type": "PositiveInteger"
            },
            "thoroughfareNumber1Suffix": {
                "type": "string",
                "description": "Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated"
            },
            "thoroughfareNumber2": {
                "type": "integer",
                "description": "Second thoroughfare number (only used if the property has a ranged address eg 23-25)",
                "x-cds-type": "PositiveInteger"
            },
            "thoroughfareNumber2Suffix": {
                "type": "string",
                "description": "Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated"
            },
            "flatUnitType": {
                "type": "string",
                "description": "Type of flat or unit for the address"
            },
            "flatUnitNumber": {
                "type": "string",
                "description": "Unit number (including suffix, if applicable)"
            },
            "floorLevelType": {
                "type": "string",
                "description": "Type of floor or level for the address"
            },
            "floorLevelNumber": {
                "type": "string",
                "description": "Floor or level number (including alpha characters)"
            },
            "lotNumber": {
                "type": "string",
                "description": "Allotment number for the address"
            },
            "buildingName1": {
                "type": "string",
                "description": "Building/Property name 1"
            },
            "buildingName2": {
                "type": "string",
                "description": "Building/Property name 2"
            },
            "streetName": {
                "type": "string",
                "description": "The name of the street"
            },
            "streetType": {
                "type": "string",
                "description": "The street type. Valid enumeration defined by Australia Post PAF code file"
            },
            "streetSuffix": {
                "type": "string",
                "description": "The street type suffix. Valid enumeration defined by Australia Post PAF code file"
            },
            "postalDeliveryType": {
                "type": "string",
                "description": "Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file"
            },
            "postalDeliveryNumber": {
                "type": "integer",
                "description": "Postal delivery number if the address is a postal delivery type",
                "x-cds-type": "PositiveInteger"
            },
            "postalDeliveryNumberPrefix": {
                "type": "string",
                "description": "Postal delivery number prefix related to the postal delivery number"
            },
            "postalDeliveryNumberSuffix": {
                "type": "string",
                "description": "Postal delivery number suffix related to the postal delivery number"
            },
            "localityName": {
                "type": "string",
                "description": "Full name of locality"
            },
            "postcode": {
                "type": "string",
                "description": "Postcode for the locality"
            },
            "state": {
                "type": "string",
                "description": "State in which the address belongs. Valid enumeration defined by Australia Post PAF code file [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf). NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT"
            }
        },
        "description": "Australian address formatted according to the file format defined by the [PAF file format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)",
        "$id": "CommonPAFAddress"
    },
    "CommonPerson": {
        "required": [
            "lastName",
            "middleNames"
        ],
        "type": "object",
        "properties": {
            "lastUpdateTime": {
                "type": "string",
                "description": "The date and time that this record was last updated by the customer.  If no update has occurred then this date should reflect the initial creation date for the data",
                "x-cds-type": "DateTimeString"
            },
            "firstName": {
                "type": "string",
                "description": "For people with single names this field need not be present. The single name should be in the lastName field. Where a data holder cannot determine first and middle names from a collection of given names, a single string representing all given names MAY be provided."
            },
            "lastName": {
                "type": "string",
                "description": "For people with single names the single name should be in this field"
            },
            "middleNames": {
                "type": "array",
                "description": "Field is mandatory but array may be empty",
                "items": {
                    "type": "string"
                }
            },
            "prefix": {
                "type": "string",
                "description": "Also known as title or salutation.  The prefix to the name (e.g. Mr, Mrs, Ms, Miss, Sir, etc)"
            },
            "suffix": {
                "type": "string",
                "description": "Used for a trailing suffix to the name (e.g. Jr)"
            },
            "occupationCode": {
                "type": "string",
                "description": "Value is a valid **[[ANZSCO]](#iref-ANZSCO)** Standard Occupation classification code. If the occupation code held by the data holder is not one of the supported **[[ANZSCO]](#iref-ANZSCO)** versions, then it must not be supplied.",
                "x-cds-type": "ExternalRef"
            },
            "occupationCodeVersion": {
                "type": "string",
                "description": "The applicable **[[ANZSCO]](#iref-ANZSCO)** release version of the occupation code provided. Mandatory if an ``occupationCode`` is supplied. If ``occupationCode`` is supplied but ``occupationCodeVersion`` is absent, default is ``ANZSCO_1220.0_2013_V1.2``",
                "default": "ANZSCO_1220.0_2013_V1.2",
                "enum": [
                    "ANZSCO_1220.0_2006_V1.0",
                    "ANZSCO_1220.0_2006_V1.1",
                    "ANZSCO_1220.0_2013_V1.2",
                    "ANZSCO_1220.0_2013_V1.3"
                ]
            }
        },
        "x-conditional": [
            "occupationCodeVersion"
        ],
        "$id": "CommonPerson"
    },
    "CommonPersonDetailV2": {
        "allOf": [
            {
                "$ref": "CommonPerson"
            },
            {
                "required": [
                    "emailAddresses",
                    "phoneNumbers",
                    "physicalAddresses"
                ],
                "type": "object",
                "properties": {
                    "phoneNumbers": {
                        "type": "array",
                        "description": "Array is mandatory but may be empty if no phone numbers are held",
                        "items": {
                            "$ref": "CommonPhoneNumber"
                        }
                    },
                    "emailAddresses": {
                        "type": "array",
                        "description": "May be empty",
                        "items": {
                            "$ref": "CommonEmailAddress"
                        }
                    },
                    "physicalAddresses": {
                        "type": "array",
                        "description": "Array is mandatory but may be empty if no valid addresses are held. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail",
                        "items": {
                            "$ref": "CommonPhysicalAddressWithPurpose"
                        }
                    }
                }
            }
        ],
        "$id": "CommonPersonDetailV2"
    },
    "CommonPhoneNumber": {
        "required": [
            "fullNumber",
            "number",
            "purpose"
        ],
        "type": "object",
        "properties": {
            "isPreferred": {
                "type": "boolean",
                "description": "May be true for one and only one entry to indicate the preferred phone number. Assumed to be 'false' if not present",
                "x-cds-type": "Boolean"
            },
            "purpose": {
                "type": "string",
                "description": "The purpose of the number as specified by the customer",
                "enum": [
                    "HOME",
                    "INTERNATIONAL",
                    "MOBILE",
                    "OTHER",
                    "UNSPECIFIED",
                    "WORK"
                ]
            },
            "countryCode": {
                "type": "string",
                "description": "If absent, assumed to be Australia (+61). The + should be included"
            },
            "areaCode": {
                "type": "string",
                "description": "Required for non Mobile Phones, if field is present and refers to Australian code - the leading 0 should be omitted."
            },
            "number": {
                "type": "string",
                "description": "The actual phone number, with leading zeros as appropriate"
            },
            "extension": {
                "type": "string",
                "description": "An extension number (if applicable)"
            },
            "fullNumber": {
                "type": "string",
                "description": "Fully formatted phone number with country code, area code, number and extension incorporated. Formatted according to section 5.1.4. of **[[RFC3966]](#iref-RFC3966)**",
                "x-cds-type": "ExternalRef"
            }
        },
        "x-conditional": [
            "areaCode"
        ],
        "$id": "CommonPhoneNumber"
    },
    "CommonPhysicalAddress": {
        "required": [
            "addressUType"
        ],
        "type": "object",
        "properties": {
            "addressUType": {
                "type": "string",
                "description": "The type of address object present",
                "enum": [
                    "paf",
                    "simple"
                ]
            },
            "simple": {
                "$ref": "CommonSimpleAddress"
            },
            "paf": {
                "$ref": "CommonPAFAddress"
            }
        },
        "x-conditional": [
            "simple",
            "paf"
        ],
        "$id": "CommonPhysicalAddress"
    },
    "CommonPhysicalAddressWithPurpose": {
        "allOf": [
            {
                "$ref": "CommonPhysicalAddress"
            },
            {
                "required": [
                    "purpose"
                ],
                "type": "object",
                "properties": {
                    "purpose": {
                        "type": "string",
                        "description": "Enumeration of values indicating the purpose of the physical address",
                        "enum": [
                            "MAIL",
                            "OTHER",
                            "PHYSICAL",
                            "REGISTERED",
                            "WORK"
                        ]
                    }
                }
            }
        ],
        "$id": "CommonPhysicalAddressWithPurpose"
    },
    "CommonSimpleAddress": {
        "required": [
            "addressLine1",
            "city",
            "state"
        ],
        "type": "object",
        "properties": {
            "mailingName": {
                "type": "string",
                "description": "Name of the individual or business formatted for inclusion in an address used for physical mail"
            },
            "addressLine1": {
                "type": "string",
                "description": "First line of the standard address object"
            },
            "addressLine2": {
                "type": "string",
                "description": "Second line of the standard address object"
            },
            "addressLine3": {
                "type": "string",
                "description": "Third line of the standard address object"
            },
            "postcode": {
                "type": "string",
                "description": "Mandatory for Australian addresses"
            },
            "city": {
                "type": "string",
                "description": "Name of the city or locality"
            },
            "state": {
                "type": "string",
                "description": "Free text if the country is not Australia. If country is Australia then must be one of the values defined by the [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf) in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT"
            },
            "country": {
                "type": "string",
                "description": "A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code. Australia (AUS) is assumed if country is not present.",
                "default": "AUS",
                "x-cds-type": "ExternalRef"
            }
        },
        "x-conditional": [
            "postcode"
        ],
        "$id": "CommonSimpleAddress"
    },
    "DiscoveryOutage": {
        "required": [
            "duration",
            "explanation",
            "outageTime"
        ],
        "type": "object",
        "properties": {
            "outageTime": {
                "type": "string",
                "description": "Date and time that the outage is scheduled to begin",
                "x-cds-type": "DateTimeString"
            },
            "duration": {
                "type": "string",
                "description": "Planned duration of the outage. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)",
                "x-cds-type": "ExternalRef"
            },
            "isPartial": {
                "type": "boolean",
                "description": "Flag that indicates, if present and set to true, that the outage is only partial meaning that only a subset of normally available end points will be affected by the outage",
                "x-cds-type": "Boolean"
            },
            "explanation": {
                "type": "string",
                "description": "Provides an explanation of the current outage that can be displayed to an end customer"
            }
        },
        "$id": "DiscoveryOutage"
    },
    "Links": {
        "required": [
            "self"
        ],
        "type": "object",
        "properties": {
            "self": {
                "type": "string",
                "description": "Fully qualified link that generated the current response document",
                "x-cds-type": "URIString"
            }
        },
        "$id": "Links"
    },
    "LinksPaginated": {
        "type": "object",
        "required": [
            "self"
        ],
        "x-conditional": [
            "prev",
            "next",
            "first",
            "last"
        ],
        "properties": {
            "self": {
                "type": "string",
                "description": "Fully qualified link that generated the current response document",
                "x-cds-type": "URIString"
            },
            "first": {
                "type": [
                    "string",
                    "null"
                ],
                "description": "URI to the first page of this set. Mandatory if this response is not the first page",
                "x-cds-type": "URIString"
            },
            "prev": {
                "type": [
                    "string",
                    "null"
                ],
                "description": "URI to the previous page of this set. Mandatory if this response is not the first page",
                "x-cds-type": "URIString"
            },
            "next": {
                "type": [
                    "string",
                    "null"
                ],
                "description": "URI to the next page of this set. Mandatory if this response is not the last page",
                "x-cds-type": "URIString"
            },
            "last": {
                "type": [
                    "string",
                    "null"
                ],
                "description": "URI to the last page of this set. Mandatory if this response is not the last page",
                "x-cds-type": "URIString"
            }
        },
        "$id": "LinksPaginated"
    },
    "Meta": {
        "type": "object",
        "$id": "Meta"
    },
    "MetaError": {
        "type": "object",
        "properties": {
            "urn": {
                "type": "string",
                "description": "The CDR error code URN which the application-specific error code extends. Mandatory if the error `code` is an application-specific error rather than a standardised error code."
            }
        },
        "description": "Additional data for customised error codes",
        "x-conditional": [
            "urn"
        ],
        "$id": "MetaError"
    },
    "MetaPaginated": {
        "type": "object",
        "required": [
            "totalRecords",
            "totalPages"
        ],
        "properties": {
            "totalRecords": {
                "type": "integer",
                "description": "The total number of records in the full set. See [pagination](#pagination).",
                "x-cds-type": "NaturalNumber"
            },
            "totalPages": {
                "type": "integer",
                "description": "The total number of pages in the full set. See [pagination](#pagination).",
                "x-cds-type": "NaturalNumber"
            }
        },
        "$id": "MetaPaginated"
    },
    "ResponseCommonCustomer": {
        "required": [
            "data",
            "links"
        ],
        "type": "object",
        "properties": {
            "data": {
                "required": [
                    "customerUType"
                ],
                "type": "object",
                "properties": {
                    "customerUType": {
                        "type": "string",
                        "description": "The type of customer object that is present",
                        "enum": [
                            "organisation",
                            "person"
                        ]
                    },
                    "person": {
                        "$ref": "CommonPerson"
                    },
                    "organisation": {
                        "$ref": "CommonOrganisation"
                    }
                },
                "x-conditional": [
                    "person",
                    "organisation"
                ]
            },
            "links": {
                "$ref": "Links"
            },
            "meta": {
                "$ref": "Meta"
            }
        },
        "$id": "ResponseCommonCustomer"
    },
    "ResponseCommonCustomerDetailV2": {
        "required": [
            "data",
            "links"
        ],
        "type": "object",
        "properties": {
            "data": {
                "required": [
                    "customerUType"
                ],
                "type": "object",
                "properties": {
                    "customerUType": {
                        "type": "string",
                        "description": "The type of customer object that is present",
                        "enum": [
                            "organisation",
                            "person"
                        ]
                    },
                    "person": {
                        "$ref": "CommonPersonDetailV2"
                    },
                    "organisation": {
                        "$ref": "CommonOrganisationDetailV2"
                    }
                },
                "x-conditional": [
                    "person",
                    "organisation"
                ]
            },
            "links": {
                "$ref": "Links"
            },
            "meta": {
                "$ref": "Meta"
            }
        },
        "$id": "ResponseCommonCustomerDetailV2"
    },
    "ResponseCommonDiscoveryStatus": {
        "required": [
            "data",
            "links"
        ],
        "type": "object",
        "properties": {
            "data": {
                "required": [
                    "status",
                    "updateTime"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Enumeration with values. OK (implementation is fully functional). PARTIAL_FAILURE (one or more end points are unexpectedly unavailable). UNAVAILABLE (the full implementation is unexpectedly unavailable). SCHEDULED_OUTAGE (an advertised outage is in effect)",
                        "enum": [
                            "OK",
                            "PARTIAL_FAILURE",
                            "SCHEDULED_OUTAGE",
                            "UNAVAILABLE"
                        ]
                    },
                    "explanation": {
                        "type": "string",
                        "description": "Provides an explanation of the current outage that can be displayed to an end customer. Mandatory if the status property is any value other than OK"
                    },
                    "detectionTime": {
                        "type": "string",
                        "description": "The date and time that the current outage was detected. Should only be present if the status property is PARTIAL_FAILURE or UNAVAILABLE",
                        "x-cds-type": "DateTimeString"
                    },
                    "expectedResolutionTime": {
                        "type": "string",
                        "description": "The date and time that full service is expected to resume (if known). Should not be present if the status property has a value of OK.",
                        "x-cds-type": "DateTimeString"
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "The date and time that this status was last updated by the Data Holder.",
                        "x-cds-type": "DateTimeString"
                    }
                },
                "x-conditional": [
                    "explanation"
                ]
            },
            "links": {
                "$ref": "Links"
            },
            "meta": {
                "$ref": "Meta"
            }
        },
        "$id": "ResponseCommonDiscoveryStatus"
    },
    "ResponseDiscoveryOutagesList": {
        "required": [
            "data",
            "links"
        ],
        "type": "object",
        "properties": {
            "data": {
                "required": [
                    "outages"
                ],
                "type": "object",
                "properties": {
                    "outages": {
                        "type": "array",
                        "description": "List of scheduled outages. Property is mandatory but may contain and empty list if no outages are scheduled",
                        "items": {
                            "$ref": "DiscoveryOutage"
                        }
                    }
                }
            },
            "links": {
                "$ref": "Links"
            },
            "meta": {
                "$ref": "Meta"
            }
        },
        "$id": "ResponseDiscoveryOutagesList"
    },
    "ResponseErrorListV2": {
        "required": [
            "errors"
        ],
        "type": "object",
        "properties": {
            "errors": {
                "type": "array",
                "description": "",
                "items": {
                    "required": [
                        "code",
                        "detail",
                        "title"
                    ],
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "description": "The code of the error encountered. Where the error is specific to the respondent, an application-specific error code, expressed as a string value. If the error is application-specific, the URN code that the specific error extends must be provided in the meta object. Otherwise, the value is the error code URN."
                        },
                        "title": {
                            "type": "string",
                            "description": "A short, human-readable summary of the problem that MUST NOT change from occurrence to occurrence of the problem represented by the error code."
                        },
                        "detail": {
                            "type": "string",
                            "description": "A human-readable explanation specific to this occurrence of the problem."
                        },
                        "meta": {
                            "$ref": "MetaError"
                        }
                    }
                }
            }
        },
        "x-conditional": [
            "meta"
        ],
        "$id": "ResponseErrorListV2"
    },
    "EnergyDerDetailResponse": {
        "type": "object",
        "required": [
            "data",
            "links",
            "meta"
        ],
        "properties": {
            "data": {
                "$ref": "EnergyDerRecord"
            },
            "links": {
                "$ref": "Links"
            },
            "meta": {
                "$ref": "Meta"
            }
        },
        "$id": "EnergyDerDetailResponse"
    },
    "EnergyDerListResponse": {
        "type": "object",
        "required": [
            "data",
            "links",
            "meta"
        ],
        "properties": {
            "data": {
                "type": "object",
                "required": [
                    "derRecords"
                ],
                "properties": {
                    "derRecords": {
                        "description": "Array of meter reads",
                        "type": "array",
                        "items": {
                            "$ref": "EnergyDerRecord"
                        }
                    }
                }
            },
            "links": {
                "$ref": "LinksPaginated"
            },
            "meta": {
                "$ref": "MetaPaginated"
            }
        },
        "$id": "EnergyDerListResponse"
    },
    "EnergyDerRecord": {
        "type": "object",
        "required": [
            "servicePointId",
            "approvedCapacity",
            "availablePhasesCount",
            "installedPhasesCount",
            "islandableInstallation",
            "acConnections"
        ],
        "x-conditional": [
            "protectionMode"
        ],
        "properties": {
            "servicePointId": {
                "description": "The independent ID of the service point, known in the industry as the National Meter Identifier (NMI). Note that the servicePointId will be replaced with NMI for all interactions between Data Holder and AEMO.",
                "type": "string"
            },
            "approvedCapacity": {
                "description": "Approved small generating unit capacity as agreed with NSP in the connection agreement, expressed in kVA",
                "type": "number"
            },
            "availablePhasesCount": {
                "description": "The number of phases available for the installation of DER",
                "type": "number"
            },
            "installedPhasesCount": {
                "description": "The number of phases that DER is connected to",
                "type": "number"
            },
            "islandableInstallation": {
                "description": "For identification of small generating units designed with the ability to operate in an islanded mode",
                "type": "string"
            },
            "hasCentralProtectionControl": {
                "description": "For DER installations where NSPs specify the need for additional forms of protection above those inbuilt in an inverter.  If absent then assumed to be false",
                "type": "boolean",
                "default": false
            },
            "protectionMode": {
                "description": "Required only when the hasCentralProtectionAndControl flag is set to true.  One or more of the object fields will be provided to describe the protection modes in place",
                "type": "object",
                "properties": {
                    "exportLimitkva": {
                        "description": "Maximum amount of power (kVA) that may be exported from a connection point to the grid, as monitored by a control / relay function. An absent value indicates no limit",
                        "type": "number"
                    },
                    "underFrequencyProtection": {
                        "description": "Protective function limit in Hz.",
                        "type": "number"
                    },
                    "underFrequencyProtectionDelay": {
                        "description": "Trip delay time in seconds.",
                        "type": "number"
                    },
                    "overFrequencyProtection": {
                        "description": "Protective function limit in Hz.",
                        "type": "number"
                    },
                    "overFrequencyProtectionDelay": {
                        "description": "Trip delay time in seconds.",
                        "type": "number"
                    },
                    "underVoltageProtection": {
                        "description": "Protective function limit in V.",
                        "type": "number"
                    },
                    "underVoltageProtectionDelay": {
                        "description": "Trip delay time in seconds.",
                        "type": "number"
                    },
                    "overVoltageProtection": {
                        "description": "Protective function limit in V.",
                        "type": "number"
                    },
                    "overVoltageProtectionDelay": {
                        "description": "Trip delay time in seconds.",
                        "type": "number"
                    },
                    "sustainedOverVoltage": {
                        "description": "Sustained over voltage.",
                        "type": "number"
                    },
                    "sustainedOverVoltageDelay": {
                        "description": "Trip delay time in seconds.",
                        "type": "number"
                    },
                    "frequencyRateOfChange": {
                        "description": "Rate of change of frequency trip point (Hz/s).",
                        "type": "number"
                    },
                    "voltageVectorShift": {
                        "description": "Trip angle in degrees.",
                        "type": "number"
                    },
                    "interTripScheme": {
                        "description": "Description of the form of inter-trip (e.g. 'from local substation').",
                        "type": "string"
                    },
                    "neutralVoltageDisplacement": {
                        "description": "Trip voltage.",
                        "type": "number"
                    }
                }
            },
            "acConnections": {
                "type": "array",
                "items": {
                    "type": "object",
                    "required": [
                        "connectionIdentifier",
                        "count",
                        "commissioningDate",
                        "status",
                        "derDevices"
                    ],
                    "x-conditional": [
                        "manufacturerName",
                        "inverterSeries",
                        "inverterModelNumber",
                        "inverterDeviceCapacity"
                    ],
                    "properties": {
                        "connectionIdentifier": {
                            "description": "AC Connection ID as defined in the DER register.  Does not align with CDR ID permanence standards",
                            "type": "number"
                        },
                        "count": {
                            "description": "Number of AC Connections in the group. For the suite of AC Connections to be considered as a group, all of the AC Connections included must have the same attributes",
                            "type": "integer",
                            "x-cds-type": "PositiveInteger"
                        },
                        "equipmentType": {
                            "description": "Indicates whether the DER device is connected via an inverter (and what category of inverter it is) or not (e.g. rotating machine). If absent, assume equipment type to be “OTHER”.",
                            "type": "string",
                            "enum": [
                                "INVERTER",
                                "OTHER"
                            ]
                        },
                        "manufacturerName": {
                            "description": "The name of the inverter manufacturer. Mandatory if equipmentType is INVERTER",
                            "type": "string"
                        },
                        "inverterSeries": {
                            "description": "The inverter series. Mandatory if equipmentType is INVERTER",
                            "type": "string"
                        },
                        "inverterModelNumber": {
                            "description": "The inverter model number. Mandatory if equipmentType is INVERTER",
                            "type": "string"
                        },
                        "commissioningDate": {
                            "description": "The date that the DER installation is commissioned",
                            "type": "string",
                            "x-cds-type": "DateString"
                        },
                        "status": {
                            "description": "Code used to indicate the status of the Inverter. This will be used to identify if an inverter is active or inactive or decommissioned",
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "INACTIVE",
                                "DECOMMISSIONED"
                            ]
                        },
                        "inverterDeviceCapacity": {
                            "description": "The rated AC output power that is listed in the product specified by the manufacturer. Mandatory if equipmentType is INVERTER",
                            "type": "number"
                        },
                        "derDevices": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "deviceIdentifier",
                                    "count",
                                    "type",
                                    "nominalRatedCapacity"
                                ],
                                "x-conditional": [
                                    "nominalStorageCapacity"
                                ],
                                "properties": {
                                    "deviceIdentifier": {
                                        "description": "Unique identifier for a single DER device or a group of DER devices with the same attributes. Does not align with CDR ID permanence standards",
                                        "type": "number"
                                    },
                                    "count": {
                                        "description": "Number of devices in the group of DER devices",
                                        "type": "number"
                                    },
                                    "manufacturer": {
                                        "description": "The name of the device manufacturer. If absent then assumed to be “unknown”",
                                        "type": "string"
                                    },
                                    "modelNumber": {
                                        "description": "The model number of the device. If absent then assumed to be “unknown”",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Code used to indicate the status of the device. This will be used to identify if an inverter is active or inactive or decommissioned",
                                        "type": "string",
                                        "enum": [
                                            "ACTIVE",
                                            "INACTIVE",
                                            "DECOMMISSIONED"
                                        ]
                                    },
                                    "type": {
                                        "description": "Used to indicate the primary technology used in the DER device",
                                        "type": "string",
                                        "enum": [
                                            "FOSSIL",
                                            "HYDRO",
                                            "WIND",
                                            "SOLAR_PV",
                                            "RENEWABLE",
                                            "GEOTHERMAL",
                                            "STORAGE",
                                            "OTHER"
                                        ]
                                    },
                                    "subtype": {
                                        "description": "Used to indicate the primary technology used in the DER device. This field is also used to record for example the battery chemistry, or the type of PV panel. It is also used to record if a battery is contained in an electric vehicle connected in a vehicle-to-grid arrangement. If absent then assumed to be “other”",
                                        "type": "string"
                                    },
                                    "nominalRatedCapacity": {
                                        "description": "Maximum output in kVA that is listed in the product specification by the manufacturer. This refers to the capacity of each unit within the device group",
                                        "type": "number"
                                    },
                                    "nominalStorageCapacity": {
                                        "description": "Maximum storage capacity in kVAh. This refers to the capacity of each storage module within the device group. Mandatory if type is equal to “STORAGE”",
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "$id": "EnergyDerRecord"
    },
    "EnergyServicePoint": {
        "type": "object",
        "required": [
            "servicePointId",
            "nationalMeteringId",
            "servicePointClassification",
            "servicePointStatus",
            "jurisdictionCode",
            "validFromDate",
            "lastUpdateDateTime"
        ],
        "properties": {
            "servicePointId": {
                "type": "string",
                "description": "The independent ID of the service point, known in the industry as the National Meter Identifier (NMI). Note that the servicePointId will be replaced with NMI for all interactions between Data Holder and AEMO."
            },
            "nationalMeteringId": {
                "type": "string",
                "description": "The independent ID of the service point, known in the industry as the NMI"
            },
            "servicePointClassification": {
                "type": "string",
                "description": "The classification of the service point as defined in MSATS procedures",
                "enum": [
                    "EXTERNAL_PROFILE",
                    "GENERATOR",
                    "LARGE",
                    "SMALL",
                    "WHOLESALE",
                    "NON_CONTEST_UNMETERED_LOAD",
                    "NON_REGISTERED_EMBEDDED_GENERATOR",
                    "DISTRIBUTION_WHOLESALE"
                ]
            },
            "servicePointStatus": {
                "type": "string",
                "description": "Code used to indicate the status of the service point. Note the details for the enumeration values below:<ul><li>**ACTIVE** - An active, energised, service point</li><li>**DE_ENERGISED** - The service point exists but is deenergised</li><li>**EXTINCT** - The service point has been permanently decommissioned</li><li>**GREENFIELD** - Applies to a service point that has never been energised</li><li>**OFF_MARKET** - Applies when the service point is no longer settled in the NEM</li></ul> ",
                "enum": [
                    "ACTIVE",
                    "DE_ENERGISED",
                    "EXTINCT",
                    "GREENFIELD",
                    "OFF_MARKET"
                ]
            },
            "jurisdictionCode": {
                "type": "string",
                "description": "Jurisdiction code to which the service point belongs.This code defines the jurisdictional rules which apply to the service point. Note the details of enumeration values below:<ul><li>**ALL** - All Jurisdictions</li><li>**ACT** - Australian Capital Territory</li><li>**NEM** - National Electricity Market</li><li>**NSW** - New South Wales</li><li>**QLD** - Queensland</li><li>**SA** - South Australia</li><li>**TAS** - Tasmania</li><li>**VIC** - Victoria</li></ul>",
                "enum": [
                    "ALL",
                    "ACT",
                    "NEM",
                    "NSW",
                    "QLD",
                    "SA",
                    "TAS",
                    "VIC"
                ]
            },
            "isGenerator": {
                "type": "boolean",
                "description": "This flag determines whether the energy at this connection point is to be treated as consumer load or as a generating unit(this may include generator auxiliary loads). If absent defaults to false. <br>**Note:** Only applicable for scheduled or semischeduled generators, does not indicate on site generation by consumer"
            },
            "validFromDate": {
                "type": "string",
                "x-cds-type": "DateString",
                "description": "The start date from which this service point first became valid"
            },
            "lastUpdateDateTime": {
                "type": "string",
                "x-cds-type": "DateTimeString",
                "description": "The date and time that the information for this service point was modified"
            },
            "consumerProfile": {
                "type": "object",
                "properties": {
                    "classification": {
                        "type": "string",
                        "description": "A code that defines the consumer class as defined in the National Energy Retail Regulations, or in overriding Jurisdictional instruments",
                        "enum": [
                            "BUSINESS",
                            "RESIDENTIAL"
                        ]
                    },
                    "threshold": {
                        "description": "A code that defines the consumption threshold as defined in the National Energy Retail Regulations, or in overriding Jurisdictional instruments. Note the details of enumeration values below: <ul><li>**LOW** - Consumption is less than the ‘lower consumption threshold’ as defined in the National Energy Retail Regulations</li><li>**MEDIUM** - Consumption is equal to or greater than the ‘lower consumption threshold’, but less than the ‘upper consumption threshold’, as defined in the National Energy Retail Regulations</li><li>**HIGH** - Consumption is equal to or greater than the ‘upper consumption threshold’ as defined in the National Energy Retail Regulations</li></ul>",
                        "enum": [
                            "LOW",
                            "MEDIUM",
                            "HIGH"
                        ]
                    }
                }
            }
        },
        "$id": "EnergyServicePoint"
    },
    "EnergyServicePointDetail": {
        "required": [
            "servicePointId",
            "nationalMeteringId",
            "servicePointClassification",
            "servicePointStatus",
            "jurisdictionCode",
            "validFromDate",
            "lastUpdateDateTime",
            "distributionLossFactor",
            "relatedParticipants",
            "location"
        ],
        "properties": {
            "servicePointId": {
                "type": "string",
                "description": "The independent ID of the service point, known in the industry as the National Meter Identifier (NMI). Note that the servicePointId will be replaced with NMI for all interactions between Data Holder and AEMO."
            },
            "nationalMeteringId": {
                "type": "string",
                "description": "The independent ID of the service point, known in the industry as the NMI"
            },
            "servicePointClassification": {
                "type": "string",
                "description": "The classification of the service point as defined in MSATS procedures",
                "enum": [
                    "EXTERNAL_PROFILE",
                    "GENERATOR",
                    "LARGE",
                    "SMALL",
                    "WHOLESALE",
                    "NON_CONTEST_UNMETERED_LOAD",
                    "NON_REGISTERED_EMBEDDED_GENERATOR",
                    "DISTRIBUTION_WHOLESALE"
                ]
            },
            "servicePointStatus": {
                "type": "string",
                "description": "Code used to indicate the status of the service point. Note the details for the enumeration values below:<ul><li>**ACTIVE** - An active, energised, service point</li><li>**DE_ENERGISED** - The service point exists but is deenergised</li><li>**EXTINCT** - The service point has been permanently decommissioned</li><li>**GREENFIELD** - Applies to a service point that has never been energised</li><li>**OFF_MARKET** - Applies when the service point is no longer settled in the NEM</li></ul> ",
                "enum": [
                    "ACTIVE",
                    "DE_ENERGISED",
                    "EXTINCT",
                    "GREENFIELD",
                    "OFF_MARKET"
                ]
            },
            "jurisdictionCode": {
                "type": "string",
                "description": "Jurisdiction code to which the service point belongs.This code defines the jurisdictional rules which apply to the service point. Note the details of enumeration values below:<ul><li>**ALL** - All Jurisdictions</li><li>**ACT** - Australian Capital Territory</li><li>**NEM** - National Electricity Market</li><li>**NSW** - New South Wales</li><li>**QLD** - Queensland</li><li>**SA** - South Australia</li><li>**TAS** - Tasmania</li><li>**VIC** - Victoria</li></ul>",
                "enum": [
                    "ALL",
                    "ACT",
                    "NEM",
                    "NSW",
                    "QLD",
                    "SA",
                    "TAS",
                    "VIC"
                ]
            },
            "isGenerator": {
                "type": "boolean",
                "description": "This flag determines whether the energy at this connection point is to be treated as consumer load or as a generating unit(this may include generator auxiliary loads). If absent defaults to false. <br>**Note:** Only applicable for scheduled or semischeduled generators, does not indicate on site generation by consumer"
            },
            "validFromDate": {
                "type": "string",
                "x-cds-type": "DateString",
                "description": "The start date from which this service point first became valid"
            },
            "lastUpdateDateTime": {
                "type": "string",
                "x-cds-type": "DateTimeString",
                "description": "The date and time that the information for this service point was modified"
            },
            "consumerProfile": {
                "type": "object",
                "properties": {
                    "classification": {
                        "type": "string",
                        "description": "A code that defines the consumer class as defined in the National Energy Retail Regulations, or in overriding Jurisdictional instruments",
                        "enum": [
                            "BUSINESS",
                            "RESIDENTIAL"
                        ]
                    },
                    "threshold": {
                        "description": "A code that defines the consumption threshold as defined in the National Energy Retail Regulations, or in overriding Jurisdictional instruments. Note the details of enumeration values below: <ul><li>**LOW** - Consumption is less than the ‘lower consumption threshold’ as defined in the National Energy Retail Regulations</li><li>**MEDIUM** - Consumption is equal to or greater than the ‘lower consumption threshold’, but less than the ‘upper consumption threshold’, as defined in the National Energy Retail Regulations</li><li>**HIGH** - Consumption is equal to or greater than the ‘upper consumption threshold’ as defined in the National Energy Retail Regulations</li></ul>",
                        "enum": [
                            "LOW",
                            "MEDIUM",
                            "HIGH"
                        ]
                    }
                }
            },
            "distributionLossFactor": {
                "type": "object",
                "required": [
                    "code",
                    "description",
                    "lossValue"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "A code used to identify data loss factor for the service point values.  Refer to AEMO distribution loss factor documents for each financial year to interpret"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the data loss factor code and value"
                    },
                    "lossValue": {
                        "type": "string",
                        "description": "The value associated with the loss factor code"
                    }
                }
            },
            "relatedParticipants": {
                "type": "array",
                "items": {
                    "type": "object",
                    "required": [
                        "party",
                        "role",
                        "location"
                    ],
                    "properties": {
                        "party": {
                            "type": "string",
                            "description": "The name of the party/orginsation related to this service point"
                        },
                        "role": {
                            "type": "string",
                            "description": "The role performed by this participant in relation to the service point. Note the details of enumeration values below: <ul><li>**FRMP** - Financially Responsible Market Participant</li><li>**LNSP** - Local Network Service Provider or Embedded Network Manager for child connection points</li><li>**DRSP** - wholesale Demand Response and/or market ancillary Service Provider and note that where it is not relevant for a NMI it will not be included</li></ul>",
                            "enum": [
                                "FRMP",
                                "LNSP",
                                "DRSP"
                            ]
                        }
                    }
                }
            },
            "location": {
                "type": "object",
                "description": "Location of the servicepoint",
                "$ref": "CommonPhysicalAddress"
            },
            "meters": {
                "description": "The meters associated with the service point. This may be empty where there are no meters physically installed at the service point",
                "type": "array",
                "items": {
                    "type": "object",
                    "required": [
                        "meterId",
                        "specifications"
                    ],
                    "properties": {
                        "meterId": {
                            "type": "string",
                            "description": "The meter ID uniquely identifies a meter for a given service point.  It is unique in the context of the service point.  It is not globally unique"
                        },
                        "specifications": {
                            "type": "object",
                            "description": "Technical characteristics of the meter",
                            "required": [
                                "status",
                                "installationType"
                            ],
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "A code to denote the status of the meter. Note the details of enumeration values below: <ul><li>**CURRENT** -Applies when a meter is current and not disconnected</li><li>**DISCONNECTED** - Applies when a meter is present but has been remotely disconnected</li></ul>",
                                    "enum": [
                                        "CURRENT",
                                        "DISCONNECTED"
                                    ]
                                },
                                "installationType": {
                                    "type": "string",
                                    "description": "The metering Installation type code indicates whether the metering installation has to be manually read. Note the details of enumeration values below: <ul><li>**BASIC** - Accumulation Meter – Type 6</li><li>**COMMS1** - Interval Meter with communications – Type 1</li><li>**COMMS2** - Interval Meter with communications – Type 2</li><li>**COMMS3** - Interval Meter with communications – Type 3</li><li>**COMMS4** - Interval Meter with communications – Type 4</li><li>**COMMS4C** - CT connected metering installation that meets the minimum services specifications</li><li>**COMMS4D** - Whole current metering installation that meets the minimum services specifications</li><li>**MRAM** - Small customer metering installation – Type 4A</li><li>**MRIM** - Manually Read Interval Meter – Type 5</li><li>**UMCP** - Unmetered Supply – Type 7</li><li>**VICAMI** - A relevant metering installation as defined in clause 9.9C of the NER</li><li>**NCONUML** - Non-contestable unmeter load - Introduced as part of Global Settlement</li></ul>",
                                    "enum": [
                                        "BASIC",
                                        "COMMS1",
                                        "COMMS2",
                                        "COMMS3",
                                        "COMMS4",
                                        "COMMS4C",
                                        "COMMS4D",
                                        "MRAM",
                                        "MRIM",
                                        "PROF",
                                        "SAMPLE",
                                        "UMCP",
                                        "VICAMI",
                                        "NCOLNUML"
                                    ]
                                },
                                "manufacturer": {
                                    "type": "string",
                                    "description": "Free text field to identify the manufacturer of the installed meter"
                                },
                                "model": {
                                    "type": "string",
                                    "description": "Free text field to identify the meter manufacturer’s designation for the meter model"
                                },
                                "readType": {
                                    "type": "string",
                                    "description": "Code to denote the method and frequency of Meter Reading. The value is formatted as follows: <ul><li>First Character = Remote (R) or Manual (M)</li><li>Second Character = Mode: T = telephone W = wireless P = powerline I = infra-red G = galvanic V = visual </li><li>Third Character = Frequency of Scheduled Meter Readings: 1 = Twelve times per year 2 = Six times per year 3 = Four times per year D = Daily or weekly</li><li>Optional Fourth Character = to identify what interval length the meter is capable of reading. This includes five, 15 and 30 minute granularity as the following: A – 5 minute B – 15 minute C – 30 minute D – Cannot convert to 5 minute (i.e. due to metering installation de-energised) M - Manually Read Accumulation Meter</li></ul> For example, <ul><li>MV3 = Manual, Visual, Quarterly</li> <li>MV3M = Manual, Visual, Quarterly, Manually Read Accumulation Meter</li> <li>RWDC = Remote, Wireless, Daily, 30 minutes interval</li></ul>"
                                },
                                "nextScheduledReadDate": {
                                    "type": "string",
                                    "x-cds-type": "DateString",
                                    "description": "This date is the next scheduled meter read date (NSRD) if a manual Meter Reading is required"
                                }
                            }
                        },
                        "registers": {
                            "description": "Usage data registers available from the meter. This may be empty where there are no meters physically installed at the service point",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "registerId",
                                    "registerConsumptionType"
                                ],
                                "properties": {
                                    "registerId": {
                                        "type": "string",
                                        "description": "Unique identifier of the register within this service point.  Is not globally unique"
                                    },
                                    "registerSuffix": {
                                        "type": "string",
                                        "description": "Register suffix of the meter register where the meter reads are obtained"
                                    },
                                    "averagedDailyLoad": {
                                        "type": "number",
                                        "description": "The energy delivered through a connection point or metering point over an extended period normalised to a 'per day' basis (kWh). This value is calculated annually."
                                    },
                                    "registerConsumptionType": {
                                        "type": "string",
                                        "description": "Indicates the consumption type of register",
                                        "enum": [
                                            "INTERVAL",
                                            "BASIC",
                                            "PROFILE_DATA",
                                            "ACTIVE_IMPORT",
                                            "ACTIVE",
                                            "REACTIVE_IMPORT",
                                            "REACTIVE"
                                        ]
                                    },
                                    "networkTariffCode": {
                                        "type": "string",
                                        "description": "The Network Tariff Code is a free text field containing a code supplied and published by the local network service provider"
                                    },
                                    "unitOfMeasure": {
                                        "type": "string",
                                        "description": "The unit of measure for data held in this register"
                                    },
                                    "timeOfDay": {
                                        "type": "string",
                                        "description": "Code to identify the time validity of register contents",
                                        "enum": [
                                            "ALLDAY",
                                            "INTERVAL",
                                            "PEAK",
                                            "BUSINESS",
                                            "SHOULDER",
                                            "EVENING",
                                            "OFFPEAK",
                                            "CONTROLLED",
                                            "DEMAND"
                                        ]
                                    },
                                    "multiplier": {
                                        "type": "number",
                                        "description": "Multiplier required to take a register value and turn it into a value representing billable energy"
                                    },
                                    "controlledLoad": {
                                        "type": "boolean",
                                        "description": "Indicates whether the energy recorded by this register is created under a Controlled Load regime"
                                    },
                                    "consumptionType": {
                                        "type": "string",
                                        "description": "Actual/Subtractive Indicator. Note the details of enumeration values below: <ul><li>**ACTUAL** implies volume of energy actually metered between two dates</li><li>**CUMULATIVE** indicates a meter reading for a specific date. A second Meter Reading is required to determine the consumption between those two Meter Reading dates</li></ul>",
                                        "enum": [
                                            "ACTUAL",
                                            "CUMULATIVE"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "$id": "EnergyServicePointDetail"
    },
    "EnergyServicePointDetailResponse": {
        "type": "object",
        "required": [
            "data",
            "links"
        ],
        "properties": {
            "data": {
                "$ref": "EnergyServicePointDetail"
            },
            "links": {
                "$ref": "Links"
            },
            "meta": {
                "$ref": "Meta"
            }
        },
        "$id": "EnergyServicePointDetailResponse"
    },
    "EnergyServicePointListResponse": {
        "type": "object",
        "required": [
            "data",
            "links",
            "meta"
        ],
        "properties": {
            "data": {
                "type": "object",
                "required": [
                    "servicePoints"
                ],
                "properties": {
                    "servicePoints": {
                        "type": "array",
                        "items": {
                            "$ref": "EnergyServicePoint"
                        }
                    }
                }
            },
            "links": {
                "$ref": "LinksPaginated"
            },
            "meta": {
                "$ref": "MetaPaginated"
            }
        },
        "$id": "EnergyServicePointListResponse"
    },
    "EnergyUsageListResponse": {
        "type": "object",
        "required": [
            "data",
            "links",
            "meta"
        ],
        "properties": {
            "data": {
                "type": "object",
                "required": [
                    "reads"
                ],
                "properties": {
                    "reads": {
                        "description": "Array of meter reads",
                        "type": "array",
                        "items": {
                            "$ref": "EnergyUsageRead"
                        }
                    }
                }
            },
            "links": {
                "$ref": "LinksPaginated"
            },
            "meta": {
                "$ref": "MetaPaginated"
            }
        },
        "$id": "EnergyUsageListResponse"
    },
    "EnergyUsageRead": {
        "type": "object",
        "required": [
            "servicePointId",
            "registerSuffix",
            "readStartDate",
            "readUType"
        ],
        "x-conditional": [
            "basicRead",
            "intervalRead"
        ],
        "properties": {
            "servicePointId": {
                "description": "The independent ID of the service point, known in the industry as the National Meter Identifier (NMI). Note that the servicePointId will be replaced with NMI for all interactions between Data Holder and AEMO.",
                "type": "string"
            },
            "registerId": {
                "description": "Register ID of the meter register where the meter reads are obtained",
                "type": "string"
            },
            "registerSuffix": {
                "description": "Register suffix of the meter register where the meter reads are obtained",
                "type": "string"
            },
            "meterID": {
                "description": "Meter id/serial number as it appears in customer’s bill. ID permanence rules do not apply.",
                "type": "string"
            },
            "controlledLoad": {
                "description": "Indicates whether the energy recorded by this register is created under a Controlled Load regime",
                "type": "boolean"
            },
            "readStartDate": {
                "description": "Date time when the meter reads start",
                "type": "string",
                "x-cds-type": "DateString"
            },
            "readEndDate": {
                "description": "Date time when the meter reads end.  If absent then assumed to be equal to readStartDate.  In this case the entry represents data for a single date specified by readStartDate",
                "type": "string",
                "x-cds-type": "DateString"
            },
            "unitOfMeasure": {
                "description": "Unit of measure of the meter reads. Refer to Appendix B of <a href='https://www.aemo.com.au/-/media/files/stakeholder_consultation/consultations/nem-consultations/2019/5ms-metering-package-2/final-determination/mdff-specification-nem12-nem13-v21-final-determination-clean.pdf?la=en&hash=03FCBA0D60E091DE00F2361AE76206EA'>MDFF Specification NEM12 NEM13 v2.1</a> for a list of possible values",
                "type": "string"
            },
            "readUType": {
                "description": "Specify the type of the meter read data",
                "type": "string",
                "enum": [
                    "basicRead",
                    "intervalRead"
                ]
            },
            "basicRead": {
                "description": "Mandatory if readUType is set to basicRead",
                "type": "object",
                "required": [
                    "value"
                ],
                "properties": {
                    "quality": {
                        "description": "The quality of the read taken.  If absent then assumed to be ACTUAL",
                        "type": "string",
                        "enum": [
                            "ACTUAL",
                            "SUBSTITUTE",
                            "FINAL_SUBSTITUTE"
                        ],
                        "default": "ACTUAL"
                    },
                    "value": {
                        "description": "Meter read value.  If positive then it means consumption, if negative it means export",
                        "type": "number"
                    }
                }
            },
            "intervalRead": {
                "description": "Mandatory if readUType is set to intervalRead",
                "type": "object",
                "required": [
                    "readIntervalLength",
                    "aggregateValue",
                    "intervalReads"
                ],
                "properties": {
                    "readIntervalLength": {
                        "description": "Read interval length in minutes",
                        "type": "integer",
                        "x-cds-type": "PositiveInteger"
                    },
                    "aggregateValue": {
                        "description": "The aggregate sum of the interval read values. If positive then it means net consumption, if negative it means net export",
                        "type": "number"
                    },
                    "intervalReads": {
                        "description": "Array of reads with each element indicating the read for the interval specified by readIntervalLength beginning at midnight of readStartDate (for example 00:00 to 00:30 would be the first reading in a 30 minute Interval)",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "value"
                            ],
                            "properties": {
                                "quality": {
                                    "description": "The quality of the read taken.  If absent then assumed to be ACTUAL",
                                    "type": "string",
                                    "enum": [
                                        "ACTUAL",
                                        "SUBSTITUTE",
                                        "FINAL_SUBSTITUTE"
                                    ],
                                    "default": "ACTUAL"
                                },
                                "value": {
                                    "description": "Interval value.  If positive then it means consumption, if negative it means export",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "$id": "EnergyUsageRead"
    },
    "ErrorListResponse": {
        "type": "object",
        "required": [
            "errors"
        ],
        "x-conditional": [
            "meta"
        ],
        "properties": {
            "errors": {
                "type": "array",
                "items": {
                    "type": "object",
                    "required": [
                        "code",
                        "title",
                        "detail"
                    ],
                    "properties": {
                        "code": {
                            "type": "string",
                            "description": "The code of the error encountered. Where the error is specific to the respondent, an application-specific error code, expressed as a string value. If the error is application-specific, the URN code that the specific error extends must be provided in the meta object. Otherwise, the value is the error code URN."
                        },
                        "title": {
                            "type": "string",
                            "description": "A short, human-readable summary of the problem that MUST NOT change from occurrence to occurrence of the problem represented by the error code."
                        },
                        "detail": {
                            "type": "string",
                            "description": "A human-readable explanation specific to this occurrence of the problem."
                        },
                        "meta": {
                            "type": "object",
                            "x-conditional": [
                                "urn"
                            ],
                            "description": "Additional data for customised error codes",
                            "properties": {
                                "urn": {
                                    "type": "string",
                                    "description": "The CDR error code URN which the application-specific error code extends. Mandatory if the error `code` is an application-specific error rather than a standardised error code."
                                }
                            }
                        }
                    }
                }
            }
        },
        "$id": "ErrorListResponse"
    }
}