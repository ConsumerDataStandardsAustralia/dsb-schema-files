{
	"info": {
		"_postman_id": "50dfb1c2-944c-465a-ad8d-a93540ac1816",
		"name": "CDR Register API Conformance",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "{industry}",
			"item": [
				{
					"name": "data-recipients",
					"item": [
						{
							"name": "brands",
							"item": [
								{
									"name": "Get Data Recipient Software Statement Assertion (SSA)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "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",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
												"key": "Authorization Endpoint (Register)",
												"value": "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",
												"disabled": true
											},
											{
												"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
												"key": "x-v",
												"value": "{{x-v}}"
											}
										],
										"url": {
											"raw": "{{baseUrlAuthenticated}}/{{industry}}/data-recipients/brands/{{dataRecipientBrandId}}/software-products/{{softwareProductId}}/ssa",
											"host": [
												"{{baseUrlAuthenticated}}"
											],
											"path": [
												"{{industry}}",
												"data-recipients",
												"brands",
												"{{dataRecipientBrandId}}",
												"software-products",
												"{{softwareProductId}}",
												"ssa"
											]
										},
										"description": "Get a Software Statement Assertion (SSA) for a Data Recipient software product on the CDR Register to be used for Dynamic Client Registration with a Data Holder Brand."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
														"key": "Authorization Endpoint (Register)",
														"value": "consequat sunt"
													},
													{
														"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
														"key": "x-v",
														"value": "{{x-v}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/{{industry}}/data-recipients/brands/:dataRecipientBrandId/software-products/:softwareProductId/ssa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{industry}}",
														"data-recipients",
														"brands",
														":dataRecipientBrandId",
														"software-products",
														":softwareProductId",
														"ssa"
													],
													"variable": [
														{
															"key": "dataRecipientBrandId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Brand that the Software Product is associated with in the CDR Register"
														},
														{
															"key": "softwareProductId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Software Product in the CDR Register"
														},
														{
															"value": "banking",
															"key": "industry"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "x-v",
													"value": "consequat sunt",
													"description": "The version of the API end point that the CDR Register has responded with."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"consequat sunt\""
										},
										{
											"name": "Invalid industry path parameter</br>Invalid SoftwareProductId",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
														"key": "Authorization Endpoint (Register)",
														"value": "consequat sunt"
													},
													{
														"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
														"key": "x-v",
														"value": "consequat sunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/:industry/data-recipients/brands/:dataRecipientBrandId/software-products/:softwareProductId/ssa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														":industry",
														"data-recipients",
														"brands",
														":dataRecipientBrandId",
														"software-products",
														":softwareProductId",
														"ssa"
													],
													"variable": [
														{
															"key": "industry",
															"value": "banking",
															"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
														},
														{
															"key": "dataRecipientBrandId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Brand that the Software Product is associated with in the CDR Register"
														},
														{
															"key": "softwareProductId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Software Product in the CDR Register"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"code\": \"laborum laboris non eiusmod\",\n   \"detail\": \"aliquip\",\n   \"title\": \"ex culpa dolor quis reprehen\",\n   \"meta\": {}\n  },\n  {\n   \"code\": \"esse\",\n   \"detail\": \"deserunt id\",\n   \"title\": \"su\",\n   \"meta\": {}\n  }\n ]\n}"
										},
										{
											"name": "Invalid Bearer Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
														"key": "Authorization Endpoint (Register)",
														"value": "consequat sunt"
													},
													{
														"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
														"key": "x-v",
														"value": "consequat sunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/:industry/data-recipients/brands/:dataRecipientBrandId/software-products/:softwareProductId/ssa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														":industry",
														"data-recipients",
														"brands",
														":dataRecipientBrandId",
														"software-products",
														":softwareProductId",
														"ssa"
													],
													"variable": [
														{
															"key": "industry",
															"value": "banking",
															"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
														},
														{
															"key": "dataRecipientBrandId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Brand that the Software Product is associated with in the CDR Register"
														},
														{
															"key": "softwareProductId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Software Product in the CDR Register"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid BrandId",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
														"key": "Authorization Endpoint (Register)",
														"value": "consequat sunt"
													},
													{
														"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
														"key": "x-v",
														"value": "consequat sunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/:industry/data-recipients/brands/:dataRecipientBrandId/software-products/:softwareProductId/ssa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														":industry",
														"data-recipients",
														"brands",
														":dataRecipientBrandId",
														"software-products",
														":softwareProductId",
														"ssa"
													],
													"variable": [
														{
															"key": "industry",
															"value": "banking",
															"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
														},
														{
															"key": "dataRecipientBrandId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Brand that the Software Product is associated with in the CDR Register"
														},
														{
															"key": "softwareProductId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Software Product in the CDR Register"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"code\": \"laborum laboris non eiusmod\",\n   \"detail\": \"aliquip\",\n   \"title\": \"ex culpa dolor quis reprehen\",\n   \"meta\": {}\n  },\n  {\n   \"code\": \"esse\",\n   \"detail\": \"deserunt id\",\n   \"title\": \"su\",\n   \"meta\": {}\n  }\n ]\n}"
										},
										{
											"name": "Invalid x-v header</br>Invalid Accept header",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
														"key": "Authorization Endpoint (Register)",
														"value": "consequat sunt"
													},
													{
														"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
														"key": "x-v",
														"value": "consequat sunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/:industry/data-recipients/brands/:dataRecipientBrandId/software-products/:softwareProductId/ssa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														":industry",
														"data-recipients",
														"brands",
														":dataRecipientBrandId",
														"software-products",
														":softwareProductId",
														"ssa"
													],
													"variable": [
														{
															"key": "industry",
															"value": "banking",
															"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
														},
														{
															"key": "dataRecipientBrandId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Brand that the Software Product is associated with in the CDR Register"
														},
														{
															"key": "softwareProductId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Software Product in the CDR Register"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "SSA fields invalid or incomplete",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
														"key": "Authorization Endpoint (Register)",
														"value": "consequat sunt"
													},
													{
														"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
														"key": "x-v",
														"value": "consequat sunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/:industry/data-recipients/brands/:dataRecipientBrandId/software-products/:softwareProductId/ssa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														":industry",
														"data-recipients",
														"brands",
														":dataRecipientBrandId",
														"software-products",
														":softwareProductId",
														"ssa"
													],
													"variable": [
														{
															"key": "industry",
															"value": "banking",
															"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
														},
														{
															"key": "dataRecipientBrandId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Brand that the Software Product is associated with in the CDR Register"
														},
														{
															"key": "softwareProductId",
															"value": "consequat sunt",
															"description": "(Required) Unique id for the Accredited Data Recipient Software Product in the CDR Register"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"code\": \"laborum laboris non eiusmod\",\n   \"detail\": \"aliquip\",\n   \"title\": \"ex culpa dolor quis reprehen\",\n   \"meta\": {}\n  },\n  {\n   \"code\": \"esse\",\n   \"detail\": \"deserunt id\",\n   \"title\": \"su\",\n   \"meta\": {}\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Get Data Recipient Software Products Statuses",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
												"key": "x-v",
												"value": "{{x-v}}"
											}
										],
										"url": {
											"raw": "{{baseUrlUnAuthenticated}}/{{industry}}/data-recipients/brands/software-products/status",
											"host": [
												"{{baseUrlUnAuthenticated}}"
											],
											"path": [
												"{{industry}}",
												"data-recipients",
												"brands",
												"software-products",
												"status"
											]
										},
										"description": "Endpoint used by participants to discover the statuses for software products from the CDR Register."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
														"key": "x-v",
														"value": "consequat sunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/:industry/data-recipients/brands/software-products/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														":industry",
														"data-recipients",
														"brands",
														"software-products",
														"status"
													],
													"variable": [
														{
															"key": "industry",
															"value": "banking",
															"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "x-v",
													"value": "consequat sunt",
													"description": "The version of the API end point that the CDR Register has responded with."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"softwareProducts\": [\n  {\n   \"softwareProductId\": \"pariatur aliquip\",\n   \"softwareProductStatus\": \"INACTIVE\"\n  },\n  {\n   \"softwareProductId\": \"nostrud nulla cupidatat\",\n   \"softwareProductStatus\": \"INACTIVE\"\n  }\n ]\n}"
										},
										{
											"name": "Bad Request</br>Invalid industry path parameter",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
														"key": "x-v",
														"value": "consequat sunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/:industry/data-recipients/brands/software-products/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														":industry",
														"data-recipients",
														"brands",
														"software-products",
														"status"
													],
													"variable": [
														{
															"key": "industry",
															"value": "banking",
															"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": [\n  {\n   \"code\": \"laborum laboris non eiusmod\",\n   \"detail\": \"aliquip\",\n   \"title\": \"ex culpa dolor quis reprehen\",\n   \"meta\": {}\n  },\n  {\n   \"code\": \"esse\",\n   \"detail\": \"deserunt id\",\n   \"title\": \"su\",\n   \"meta\": {}\n  }\n ]\n}"
										},
										{
											"name": "Invalid x-v header</br>Invalid Accept header",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
														"key": "x-v",
														"value": "consequat sunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/:industry/data-recipients/brands/software-products/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														":industry",
														"data-recipients",
														"brands",
														"software-products",
														"status"
													],
													"variable": [
														{
															"key": "industry",
															"value": "banking",
															"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Data Recipients",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
										"key": "x-v",
										"value": "{{x-v}}"
									}
								],
								"url": {
									"raw": "{{baseUrlUnAuthenticated}}/{{industry}}/data-recipients",
									"host": [
										"{{baseUrlUnAuthenticated}}"
									],
									"path": [
										"{{industry}}",
										"data-recipients"
									]
								},
								"description": "Endpoint used by participants to discover data recipients and associated brands and software products, available in the CDR ecosystem."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
												"key": "x-v",
												"value": "consequat sunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/:industry/data-recipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												":industry",
												"data-recipients"
											],
											"variable": [
												{
													"key": "industry",
													"value": "banking",
													"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "x-v",
											"value": "consequat sunt",
											"description": "The version of the API end point that the CDR Register has responded with."
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"data\": [\n  {\n   \"accreditationNumber\": \"ex ad dolor dolore pariatur\",\n   \"industry\": \"banking\",\n   \"lastUpdated\": \"1994-12-13T01:14:39.987Z\",\n   \"legalEntityId\": \"incididun\",\n   \"legalEntityName\": \"labore in magna\",\n   \"logoUri\": \"amet esse dolore ut\",\n   \"status\": \"SUSPENDED\",\n   \"dataRecipientBrands\": [\n    {\n     \"brandName\": \"dolor consectetur\",\n     \"dataRecipientBrandId\": \"magna\",\n     \"logoUri\": \"quis est in ut fugiat\",\n     \"status\": \"REMOVED\",\n     \"softwareProducts\": [\n      {\n       \"logoUri\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductDescription\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    },\n    {\n     \"brandName\": \"aute dolor incididunt\",\n     \"dataRecipientBrandId\": \"dolor nisi\",\n     \"logoUri\": \"est veniam\",\n     \"status\": \"INACTIVE\",\n     \"softwareProducts\": [\n      {\n       \"logoUri\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductDescription\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    }\n   ]\n  },\n  {\n   \"accreditationNumber\": \"in eu\",\n   \"industry\": \"banking\",\n   \"lastUpdated\": \"1956-08-31T03:05:23.045Z\",\n   \"legalEntityId\": \"veniam laboris dolor cillum\",\n   \"legalEntityName\": \"cillum velit ad commodo\",\n   \"logoUri\": \"enim in ad\",\n   \"status\": \"SUSPENDED\",\n   \"dataRecipientBrands\": [\n    {\n     \"brandName\": \"dolor nostrud\",\n     \"dataRecipientBrandId\": \"aliquip Excepteur Duis fugiat\",\n     \"logoUri\": \"dolore sit et nisi aliqua\",\n     \"status\": \"INACTIVE\",\n     \"softwareProducts\": [\n      {\n       \"logoUri\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductDescription\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    },\n    {\n     \"brandName\": \"commodo\",\n     \"dataRecipientBrandId\": \"culpa in et Duis\",\n     \"logoUri\": \"deserunt est\",\n     \"status\": \"INACTIVE\",\n     \"softwareProducts\": [\n      {\n       \"logoUri\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"softwareProductDescription\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ]\n    }\n   ]\n  }\n ]\n}"
								},
								{
									"name": "Bad Request</br>Invalid industry path parameter",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
												"key": "x-v",
												"value": "consequat sunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/:industry/data-recipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												":industry",
												"data-recipients"
											],
											"variable": [
												{
													"key": "industry",
													"value": "banking",
													"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"code\": \"laborum laboris non eiusmod\",\n   \"detail\": \"aliquip\",\n   \"title\": \"ex culpa dolor quis reprehen\",\n   \"meta\": {}\n  },\n  {\n   \"code\": \"esse\",\n   \"detail\": \"deserunt id\",\n   \"title\": \"su\",\n   \"meta\": {}\n  }\n ]\n}"
								},
								{
									"name": "Invalid x-v header</br>Invalid Accept header",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
												"key": "x-v",
												"value": "consequat sunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/:industry/data-recipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												":industry",
												"data-recipients"
											],
											"variable": [
												{
													"key": "industry",
													"value": "banking",
													"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Data Recipient Statuses",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
										"key": "x-v",
										"value": "{{x-v}}"
									}
								],
								"url": {
									"raw": "{{baseUrlUnAuthenticated}}/{{industry}}/data-recipients/status",
									"host": [
										"{{baseUrlUnAuthenticated}}"
									],
									"path": [
										"{{industry}}",
										"data-recipients",
										"status"
									]
								},
								"description": "Endpoint used by participants to discover the statuses for Data Recipients from the CDR Register."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
												"key": "x-v",
												"value": "consequat sunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/:industry/data-recipients/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												":industry",
												"data-recipients",
												"status"
											],
											"variable": [
												{
													"key": "industry",
													"value": "banking",
													"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "x-v",
											"value": "consequat sunt",
											"description": "The version of the API end point that the CDR Register has responded with."
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"dataRecipients\": [\n  {\n   \"dataRecipientId\": \"veniam qui commodo\",\n   \"dataRecipientStatus\": \"ACTIVE\"\n  },\n  {\n   \"dataRecipientId\": \"ex sed ea\",\n   \"dataRecipientStatus\": \"ACTIVE\"\n  }\n ]\n}"
								},
								{
									"name": "Bad Request</br>Invalid industry path parameter",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
												"key": "x-v",
												"value": "consequat sunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/:industry/data-recipients/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												":industry",
												"data-recipients",
												"status"
											],
											"variable": [
												{
													"key": "industry",
													"value": "banking",
													"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": [\n  {\n   \"code\": \"laborum laboris non eiusmod\",\n   \"detail\": \"aliquip\",\n   \"title\": \"ex culpa dolor quis reprehen\",\n   \"meta\": {}\n  },\n  {\n   \"code\": \"esse\",\n   \"detail\": \"deserunt id\",\n   \"title\": \"su\",\n   \"meta\": {}\n  }\n ]\n}"
								},
								{
									"name": "Invalid x-v header</br>Invalid Accept header",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
												"key": "x-v",
												"value": "consequat sunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/:industry/data-recipients/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												":industry",
												"data-recipients",
												"status"
											],
											"variable": [
												{
													"key": "industry",
													"value": "banking",
													"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Data Holder Brands",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
								"key": "Authorization",
								"value": "Bearer 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"
							},
							{
								"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "{{x-v}}"
							}
						],
						"url": {
							"raw": "{{baseUrlAuthenticated}}/{{industry}}/data-holders/brands",
							"host": [
								"{{baseUrlAuthenticated}}"
							],
							"path": [
								"{{industry}}",
								"data-holders",
								"brands"
							]
						},
						"description": "Allows Data Recipients to discover data holder brands available in the CDR ecosystem."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
										"key": "Authorization Endpoint (Register)",
										"value": "consequat sunt"
									},
									{
										"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
										"key": "x-v",
										"value": "consequat sunt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:industry/data-holders/brands?updated-since=1953-08-22T03:39:37.293Z&page=11120411&page-size=11120411",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":industry",
										"data-holders",
										"brands"
									],
									"query": [
										{
											"key": "updated-since",
											"value": "1953-08-22T03:39:37.293Z"
										},
										{
											"key": "page",
											"value": "11120411"
										},
										{
											"key": "page-size",
											"value": "11120411"
										}
									],
									"variable": [
										{
											"key": "industry",
											"value": "banking",
											"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-v",
									"value": "consequat sunt",
									"description": "The version of the API end point that the CDR Register has responded with."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"authDetails\": [\n    {\n     \"jwksEndpoint\": \"ad Excepteu\",\n     \"registerUType\": \"SIGNED-JWT\"\n    },\n    {\n     \"jwksEndpoint\": \"elit sint aute reprehenderit\",\n     \"registerUType\": \"SIGNED-JWT\"\n    }\n   ],\n   \"brandName\": \"sed fugiat\",\n   \"dataHolderBrandId\": \"qui nulla mollit\",\n   \"endpointDetail\": {\n    \"infosecBaseUri\": \"non ea in ipsum\",\n    \"publicBaseUri\": \"culpa officia\",\n    \"resourceBaseUri\": \"do cillum Excepteur\",\n    \"version\": \"ut in\",\n    \"websiteUri\": \"aute ea a\",\n    \"extensionBaseUri\": \"Duis sunt\"\n   },\n   \"industry\": \"banking\",\n   \"lastUpdated\": \"1983-10-12T06:58:28.944Z\",\n   \"legalEntity\": {\n    \"legalEntityId\": \"nisi anim consequat in\",\n    \"legalEntityName\": \"conse\",\n    \"logoUri\": \"sint commodo quis culpa\",\n    \"registrationNumber\": \"laborum officia dolore\",\n    \"registrationDate\": \"1953-12-18\",\n    \"registeredCountry\": \"ad Excepteur sit\",\n    \"abn\": \"velit voluptate ipsum sunt\",\n    \"acn\": \"magna velit eiusmod labore\",\n    \"arbn\": \"dolore esse tempor\",\n    \"industryCode\": \"laborum anim aute consequat\",\n    \"organisationType\": \"TRUST\"\n   },\n   \"logoUri\": \"irure Ut incididunt mollit\",\n   \"status\": \"REMOVED\"\n  },\n  {\n   \"authDetails\": [\n    {\n     \"jwksEndpoint\": \"occaecat\",\n     \"registerUType\": \"SIGNED-JWT\"\n    },\n    {\n     \"jwksEndpoint\": \"anim in aliqua\",\n     \"registerUType\": \"SIGNED-JWT\"\n    }\n   ],\n   \"brandName\": \"eu mollit\",\n   \"dataHolderBrandId\": \"cillum quis veniam\",\n   \"endpointDetail\": {\n    \"infosecBaseUri\": \"nisi aliqua\",\n    \"publicBaseUri\": \"officia laborum\",\n    \"resourceBaseUri\": \"quis commodo dolore nostrud dolor\",\n    \"version\": \"et velit eu\",\n    \"websiteUri\": \"\",\n    \"extensionBaseUri\": \"f\"\n   },\n   \"industry\": \"banking\",\n   \"lastUpdated\": \"1991-06-09T06:39:37.742Z\",\n   \"legalEntity\": {\n    \"legalEntityId\": \"pariatur dolor deserunt est\",\n    \"legalEntityName\": \"culpa esse dolore id\",\n    \"logoUri\": \"mollit consequat ea cillum\",\n    \"registrationNumber\": \"commodo\",\n    \"registrationDate\": \"1942-08-17\",\n    \"registeredCountry\": \"nulla veniam adipisicing ipsum\",\n    \"abn\": \"\",\n    \"acn\": \"minim esse\",\n    \"arbn\": \"amet ut Excepteur\",\n    \"industryCode\": \"elit anim occaecat\",\n    \"organisationType\": \"OTHER\"\n   },\n   \"logoUri\": \"Duis ullamco\",\n   \"status\": \"REMOVED\"\n  }\n ],\n \"links\": {\n  \"self\": \"Duis\",\n  \"first\": \"tempor nostrud\",\n  \"last\": \"reprehenderit\",\n  \"next\": \"proident officia\",\n  \"prev\": \"id aute mollit\"\n },\n \"meta\": {\n  \"totalPages\": 25938973,\n  \"totalRecords\": 19939526\n }\n}"
						},
						{
							"name": "Bad Request</br>Invalid industry path parameter",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
										"key": "Authorization Endpoint (Register)",
										"value": "consequat sunt"
									},
									{
										"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
										"key": "x-v",
										"value": "consequat sunt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:industry/data-holders/brands?updated-since=1953-08-22T03:39:37.293Z&page=11120411&page-size=11120411",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":industry",
										"data-holders",
										"brands"
									],
									"query": [
										{
											"key": "updated-since",
											"value": "1953-08-22T03:39:37.293Z"
										},
										{
											"key": "page",
											"value": "11120411"
										},
										{
											"key": "page-size",
											"value": "11120411"
										}
									],
									"variable": [
										{
											"key": "industry",
											"value": "banking",
											"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"code\": \"quis do mollit ipsum\",\n   \"detail\": \"ut velit\",\n   \"title\": \"consequat dolor adipisicing pariatu\",\n   \"meta\": {}\n  },\n  {\n   \"code\": \"Ut mollit proident cillum\",\n   \"detail\": \"exercitation\",\n   \"title\": \"aliquip magna eiusmod\",\n   \"meta\": {}\n  }\n ]\n}"
						},
						{
							"name": "Invalid Bearer Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
										"key": "Authorization Endpoint (Register)",
										"value": "consequat sunt"
									},
									{
										"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
										"key": "x-v",
										"value": "consequat sunt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:industry/data-holders/brands?updated-since=1953-08-22T03:39:37.293Z&page=11120411&page-size=11120411",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":industry",
										"data-holders",
										"brands"
									],
									"query": [
										{
											"key": "updated-since",
											"value": "1953-08-22T03:39:37.293Z"
										},
										{
											"key": "page",
											"value": "11120411"
										},
										{
											"key": "page-size",
											"value": "11120411"
										}
									],
									"variable": [
										{
											"key": "industry",
											"value": "banking",
											"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid x-v header</br>Invalid Accept header",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) An Authorisation Token as per [RFC6750](https://tools.ietf.org/html/rfc6750).",
										"key": "Authorization Endpoint (Register)",
										"value": "consequat sunt"
									},
									{
										"description": "The version of the API end point requested by the client. Must be set to a positive integer.",
										"key": "x-v",
										"value": "consequat sunt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:industry/data-holders/brands?updated-since=1953-08-22T03:39:37.293Z&page=11120411&page-size=11120411",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":industry",
										"data-holders",
										"brands"
									],
									"query": [
										{
											"key": "updated-since",
											"value": "1953-08-22T03:39:37.293Z"
										},
										{
											"key": "page",
											"value": "11120411"
										},
										{
											"key": "page-size",
											"value": "11120411"
										}
									],
									"variable": [
										{
											"key": "industry",
											"value": "banking",
											"description": "(Required) The industry the participant is retrieving data for (Banking, etc)"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Get OpenId Provider Config",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/idp/.well-known/openid-configuration",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"idp",
						".well-known",
						"openid-configuration"
					]
				},
				"description": "Endpoint used by participants to discover the CDR Register OpenID configuration and obtain information needed to interact with it, including its OAuth 2.0 endpoint locations."
			},
			"response": [
				{
					"name": "The OpenID Provider Configuration Metadata values",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/.well-known/openid-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								".well-known",
								"openid-configuration"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"claims_supported\": [\n  \"adipisicing ad ut\",\n  \"anim elit i\"\n ],\n \"code_challenge_methods_supported\": [\n  \"occaecat irure amet velit ut\",\n  \"ullamco culpa\"\n ],\n \"grant_types_supported\": [\n  \"occaecat culpa deserun\",\n  \"Lorem consequat dolor commodo esse\"\n ],\n \"id_token_signing_alg_values_supported\": [\n  \"ut\",\n  \"adipisicing labore enim proident pariatur\"\n ],\n \"issuer\": \"reprehen\",\n \"jwks_uri\": \"sit\",\n \"request_object_signing_alg_values_supported\": [\n  \"labore ipsum magna et\",\n  \"veniam fugiat \"\n ],\n \"response_types_supported\": [\n  \"quis culpa\",\n  \"dolor reprehenderit amet\"\n ],\n \"scopes_supported\": [\n  \"culpa\",\n  \"anim \"\n ],\n \"subject_types_supported\": [\n  \"pariatur voluptate Ut laboris\",\n  \"ea\"\n ],\n \"tls_client_certificate_bound_access_tokens\": false,\n \"token_endpoint\": \"Lorem exercitation minim eiusmod occaecat\",\n \"token_endpoint_auth_methods_supported\": [\n  \"sunt al\",\n  \"ex Duis\"\n ]\n}"
				}
			]
		},
		{
			"name": "Get JWKS",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/idp/.well-known/openid-configuration/jwks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"idp",
						".well-known",
						"openid-configuration",
						"jwks"
					]
				},
				"description": "JWKS endpoint containing the public keys used by the CDR Register to validate the signature of issued SSAs and authenticate outbound calls to participants in the CDR."
			},
			"response": [
				{
					"name": "A JSON object that represents a set of JWKs",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/jwks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"jwks"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"keys\": [\n  {\n   \"alg\": \"dolore reprehenderit voluptate\",\n   \"e\": \"amet laborum\",\n   \"key_ops\": [\n    \"consectetur veni\",\n    \"Excepteur sit\"\n   ],\n   \"kid\": \"aute ea ipsum sunt quis\",\n   \"kty\": \"elit exercitation esse\",\n   \"n\": \"ullamco ex\"\n  },\n  {\n   \"alg\": \"adipisicing deserunt consequat\",\n   \"e\": \"nostrud fugiat\",\n   \"key_ops\": [\n    \"nulla in ad qui\",\n    \"officia sit\"\n   ],\n   \"kid\": \"Lorem enim cillum\",\n   \"kty\": \"adipisicing elit velit culpa\",\n   \"n\": \"culpa ut\"\n  }\n ]\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://register.cdr.gov.au/cdr-register/v1",
			"type": "string"
		}
	]
}